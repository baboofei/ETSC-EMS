/**
 * 左边功能列表上的controller
 */

Ext.define('EIM.controller.Functions', {
    extend:'Ext.app.Controller',

    stores:[
        'Functions',
        'Elements'
    ],
    models: [
        'Element'
    ],

    views:[
        'tree.Tree'
    ],

    init:function () {
        var me = this;
        me.control({
            'functree':{
                /**
                 * 鼠标点击树上节点时打开新标签
                 * @param tree
                 * @param record
                 * @param item
                 * @param index
                 * @param e
                 * @param eOpts
                 */
                itemclick:function (tree, record, item, index, e, eOpts) {
                    var is_node = record["raw"]["leaf"];
                    if (is_node) {
                        // var id = record.get("text");
                        var id = record["raw"]["ext_id"];
                        var innerId = record["raw"]["id"];
                        var controller = record["raw"]["controller"];
                        var title = record.get("text");
                        var tabParent = Ext.getCmp('center');

                        if (tabParent) {
                            if (tabParent.getChildByElement(id)) {
                                tabParent.setActiveTab(id);
                            } else {
                                Ext.getBody().mask("加载中，请稍候……");
                                me.onTabLoad(controller);
                                var newTab = tabParent.add({
                                    id:id,
                                    innerId:innerId,
                                    title:title,
                                    closable:true,
                                    //                                以下两项就用默认的就可以，不用另外设置，但要把tabpanel本身的autoDestroy设置成true
                                    //                                （其实也就是不用另外设置，用默认的而已）
                                    //                                autoDestroy: false,
                                    //                                closeAction: 'hide',
                                    xtype:record["raw"]["widget"]
                                });
                                tabParent.setActiveTab(newTab);
//                                me.getPrivilege(controller);
                                Ext.getBody().unmask();
                            }
                        }
                    }
                }
            },
            '#center tab[text=销售工作日志]':{
//                /**
//                 * 关闭标签时销毁一次自定义的组件，不然组件会重复生成好多
//                 * 不过似乎系统自带的组件不用这样手动清除？
//                 * @param tab
//                 * @param eOpts
//                 */
//                close:function (tab, eOpts) {
//                    Ext.ComponentQuery.query("salecase_grid")[0].destroy();
//                    Ext.ComponentQuery.query('salecase_detail form[title=个案信息]')[0].destroy();
//                    //这个窗口不用销毁，大概因为它是模态，关闭的时候已经销毁了？
//                    //Ext.ComponentQuery.query('salecase_form')[0].destroy();
//                }
            },
            '#center grid[title=销售工作日志明细]':{
//                render: function(){
//                    console.log("salelog已渲染");
//                },
//                selectionchange: function(){
//                    console.log("换了salelog里选的");
//                }
            }
        });
    },
    /**
     * 每个标签打开之前加载它所要用到的组件controller
     * 以及自定义组件controller
     * @param controller
     */
    onTabLoad:function (controller) {
        var me = this;
        var ux_controllers_array = ["Salecases", "Customers", "CustomerUnits", "Contracts", "Quotes", "Products"];
        load_uniq_controller(me, controller);
        if (Ext.Array.indexOf(ux_controllers_array, controller) != -1) {
            load_uniq_controller(me, 'Etscuxes');
        }
        if(controller === "Customers" || controller === "Salecases") {
            //“客户管理”和“销售个案管理”里要用到打印快递单，没别的地儿加载
            load_uniq_controller(me, 'ExpressSheets');
        }
console.log("XX");
    },
    
    /**
     * 每个标签打开之前请求其中用到的组件的权限
     * @param controller
     */
    getPrivilege: function(controller) {
        switch(controller) {
        case 'Quotes':
            Ext.Ajax.request({
                url:'servlet/QuoteServlet?type=pdfbutton',
                success: function(response) {
                    var text = Ext.decode(response.responseText);
                    var pdf_button = Ext.ComponentQuery.query('quote_panel [action=generate_pdf]')[0];
                    var log_button = Ext.ComponentQuery.query('quote_panel [action=generate_log]')[0];
                    if(text["pdf_button"] === true) {
                        pdf_button.show();
                        log_button.show();
                    }else{
                        pdf_button.hide();
                        log_button.hide();
                    }
                },
                failure: function() {
                    var pdf_button = Ext.ComponentQuery.query('quote_panel [action=generate_pdf]')[0];
                    var log_button = Ext.ComponentQuery.query('quote_panel [action=generate_log]')[0];
                    pdf_button.hide();
                    log_button.hide();
                }
            });
            break
        case '':
            break
        default:
            break
        }
    }
});
