Ext.define('EIM.controller.Customers', {
    extend: 'Ext.app.Controller',

    stores: [
        //'MiniCustomers',
        'Customers',
        'dict.Applications',
        'GridCustomers'
    ],
    models: [
        //'MiniCustomer',
        'Customer',
        'dict.Application',
        'GridCustomer'
    ],

    views: [
        'customer.AddToMiniForm',
        'customer.Grid',
        'customer.Form'
    ],

    refs: [{
        ref: 'grid',
        selector: 'customer_grid'
    }],

    init: function() {
        var me = this;
        me.control({
            'customer_grid': {
                render: this.loadCustomers,
                itemdblclick: this.editCustomer,
                selectionchange: this.selectionChange
            },
            'button[action=addCustomer]': {
                click: this.addCustomer
            },
            'customer_form button[action=save]': {
            	click: this.saveCustomer
            },
            'customer_add_to_mini_form button[action=add_to]': {
                click: this.addToMiniCustomer
            },
            'customer_add_to_mini_form combo[name=customer_id]': {
                select: this.showContact
            }
        });
    },

    addCustomer: function() {
        Ext.widget('customer_form').show();
        Ext.getStore("dict.Applications").load();
    },
    
    saveCustomer: function(button) {
        var win = button.up('window');
        var form = win.down('form', false);
        form.submit({
    		url:"servlet/GetLogData?type=addcustomer",
    		submitEmptyText:false,
            success: function(form, action) {
                //如果保存的时候，下面有带加号的客户选择组件，则把值回填到其中
                if(Ext.ComponentQuery.query("expandable_customer_combo")[0]) {
                    var response = action.response;
    //                console.log(response);
    //                console.log(response.request.options.params.name);
    //                var text = response.request.options.params.name;
        //          console.log(form);
        //          console.log(text);
                    Ext.ComponentQuery.query("expandable_customer_combo combo")[0].store.load(
                        {
                            callback : function(records, operation, success) {
    //                            console.log(records);
    //                            console.log(Ext.pluck(records, "data"));
                                var input_name = response.request.options.params.name;
                                var return_data = Ext.pluck(records, "data");
                                var id_array = Ext.pluck(return_data, "id");
                                var name_array = Ext.pluck(return_data, "name");
                                var id;
                                Ext.Array.each(name_array, function(name, index) {
                                    if(name === input_name) {
                                        id = id_array[index];
                                    }
                                });
                                Ext.ComponentQuery.query("expandable_customer_combo combo")[0].setValue(id);
    //                            var expand = Ext.ComponentQuery.query("expandable_customer_combo")[0];
    //                            if(expand) {
    //                                var customer_combo = expand.down('combo', false);
    //                                customer_combo.getStore().getProxy().extraParams['customer_unit_id'] = records[0]["data"]["id"];
    //                            }
                            }
    
                        }
                    );
                }
                win.close();
            }
		});
    },

    loadCustomers: function() {
//        Ext.getStore("dict.Applications").load();
        Ext.getStore("Customers").load();
    },

    editCustomer: function() {
        var record = this.getGrid().getSelectedCustomer();
        var view = Ext.widget('customer_form').show();
        Ext.getStore("dict.Applications").load();
        view.down('form').loadRecord(record);
        //boxselect里的值单独赋
//        console.log(record.data);
        var app_ids = record.data["application_ids"];
        var app_array = Ext.Array.map(app_ids.split("|"), function(value){
            return Number(value);
        });
//        console.log(app_ids);
        view.down('form').down('boxselect').setValue(app_array);
    },

    selectionChange: function() {

    },
    
    /**
     * 销售日志模块中“添加联系人”操作时的提交
     */
    addToMiniCustomer: function(btn) {
        var win = btn.up("window");
        var form = win.down("form", false);
        var values = Ext.encode(form.form.getValues());
        var salecase_id = Ext.ComponentQuery.query("salecase_grid")[0].getSelectionModel().getSelection()[0].get("id");
        if(form.form.isValid()) {
            Ext.Ajax.request({
                url: 'servlet/SalselogPostServlet?type=addCaseCustomers',
                params: {
                    value: values,
                    salecase_id : salecase_id
                },
                success: function(response){
                    var text = Ext.decode(response.responseText);
                }
            });
            win.close();
            Ext.getStore('MiniCustomers').load();
        }
    },
    /**
     * 选联系人后把联系信息显示在下面灰框里供查看
     */
    showContact: function(combo, record, eOpts) {
        var form = combo.up('form');
        var mobile = form.down('[name=mobile]');
        var phone = form.down('[name=phone]');
        var fax = form.down('[name=fax]');
        
        mobile.setValue(record[0].get("mobile"));
        phone.setValue(record[0].get("phone"));
        fax.setValue(record[0].get("fax"));
    }
});